// optimized with space complexity O(1);

class Solution {
public:
    // transpose logic
    void trans(vector<vector<int>>& v) {
        for (int i = 0; i < v.size(); i++) {
            for (int j = i+1; j < v[0].size(); j++) {
                swap(v[i][j] , v[j][i]);
            }
        }
    }
    void rotate(vector<vector<int>>& matrix) {
        trans(matrix);
        int n = matrix.size();
        for (int i = 0; i < matrix.size(); i++) {
            reverse(matrix[i].begin() , matrix[i].end());
        }
    }
};
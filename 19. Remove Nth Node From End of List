/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
//  approach->pehle temp ko prev tk lejau = size-n
class Solution {
public:
    int size(ListNode* head){
        int count = 0;
        ListNode* temp = head;
        while(temp!=NULL){
            temp = temp->next;
            count++;
        }
        return count;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int s = size(head);
        ListNode* prev = head;
        if(n==s){
            // head remove krna h
            ListNode* a = head;
            head = head->next;
            delete a;
            return head;

        }
        ListNode* temp = head;

        for(int i=0;i<s-n-1;i++){
            prev = prev->next;
        } // hmare pas prev tk agya

        for(int i=0;i<s-n;i++){
            temp = temp->next;
        } // hmare pas temp tk agya

        // remove ka logic
        prev->next = temp->next;
        temp->next = NULL;
        delete temp;
        return head;
        
    }
};